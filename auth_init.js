// Sistema de Inicializa√ß√£o Autom√°tica
function initializeSystem() {
    console.log('üîß Inicializando sistema...');
    
    // Verificar e criar usu√°rio gerente se n√£o existir
    const users = JSON.parse(localStorage.getItem('users')) || [];
    
    const gerenteExists = users.some(user => user.username === 'gerente');
    
    if (!gerenteExists) {
        console.log('üëë Criando usu√°rio gerente padr√£o...');
        
        const defaultManager = {
            username: 'gerente',
            password: 'gerente123',
            email: 'gerente@ligads.com',
            birthdate: '1990-01-01',
            role: 'gerente',
            isActive: true,
            created: new Date().toISOString()
        };
        
        users.push(defaultManager);
        localStorage.setItem('users', JSON.stringify(users));
        
        console.log('‚úÖ Usu√°rio gerente criado com sucesso!');
        console.log('üìã Credenciais:', {
            usu√°rio: 'gerente',
            senha: 'gerente123',
            email: 'gerente@ligads.com'
        });
    } else {
        console.log('‚úÖ Usu√°rio gerente j√° existe no sistema');
    }
    
    return users;
}

// Fun√ß√£o para verificar usu√°rios (debug)
function debugUsers() {
    const users = JSON.parse(localStorage.getItem('users')) || [];
    console.log('=== üìä USU√ÅRIOS DO SISTEMA ===');
    if (users.length === 0) {
        console.log('‚ùå Nenhum usu√°rio encontrado');
    } else {
        users.forEach((user, index) => {
            console.log(`${index + 1}. ${user.username} (${user.role}) - ${user.email}`);
        });
    }
    console.log('==============================');
}

// Executar inicializa√ß√£o quando o script carregar
initializeSystem();